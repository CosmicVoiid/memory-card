{"version":3,"sources":["components/Card.js","components/Header.js","App.js","index.js"],"names":["Card","props","useState","isClicked","setIsClicked","useEffect","isGameOver","className","onClick","randomize","console","log","parentCallback","src","img","alt","description","Header","App","imgArray","setImgArray","currentScore","setCurrentScore","highScore","setHighScore","gameOver","setGameOver","shuffle","array","randomIndex","currentIndex","length","Math","floor","random","handleClick","arrayCopy","updateScore","childData","map","resource","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLA2BeA,MAxBf,SAAcC,GACb,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAeA,OANAC,qBAAU,YACgB,IAArBJ,EAAMK,YACTF,GAAa,KAEZ,CAACH,EAAMK,aAGT,sBAAKC,UAAU,iBAAiBC,QAdb,WACnBP,EAAMQ,YACNC,QAAQC,IAAIR,GACZF,EAAMW,eAAeT,GACrBC,GAAa,IAUb,UACC,qBAAKS,IAAKZ,EAAMa,IAAKC,IAAKd,EAAMe,cAChC,mBAAGT,UAAU,cAAb,SAA4BN,EAAMe,kBChBtBC,MAJf,WACC,OAAO,wDCsGOC,MApGf,WACC,MAAgChB,mBAAS,CACxC,CAAEY,IAAK,6BAA8BE,YAAa,SAClD,CAAEF,IAAK,gCAAiCE,YAAa,WACrD,CAAEF,IAAK,yBAA0BE,YAAa,WAC9C,CAAEF,IAAK,4BAA6BE,YAAa,cACjD,CAAEF,IAAK,2BAA4BE,YAAa,aAChD,CAAEF,IAAK,2BAA4BE,YAAa,aAChD,CAAEF,IAAK,0BAA2BE,YAAa,YAC/C,CAAEF,IAAK,wBAAyBE,YAAa,UAC7C,CAAEF,IAAK,uBAAwBE,YAAa,SAC5C,CAAEF,IAAK,yBAA0BE,YAAa,WAC9C,CAAEF,IAAK,8BAA+BE,YAAa,gBACnD,CAAEF,IAAK,uBAAwBE,YAAa,SAC5C,CAAEF,IAAK,2BAA4BE,YAAa,aAChD,CAAEF,IAAK,6BAA8BE,YAAa,eAClD,CAAEF,IAAK,6BAA8BE,YAAa,iBAfnD,mBAAOG,EAAP,KAAiBC,EAAjB,KAkBA,EAAwClB,mBAAS,GAAjD,mBAAOmB,EAAP,KAAqBC,EAArB,KAEA,EAAkCpB,mBAAS,GAA3C,mBAAOqB,EAAP,KAAkBC,EAAlB,KAEA,EAAgCtB,oBAAS,GAAzC,mBAAOuB,EAAP,KAAiBC,EAAjB,KAEMC,EAAU,SAACC,GAKhB,IAJA,IACCC,EADGC,EAAeF,EAAMG,OAID,IAAjBD,GAAoB,CAE1BD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GACzCA,IAH0B,MAMkB,CAC3CF,EAAMC,GACND,EAAME,IAFNF,EAAME,GANmB,KAMJF,EAAMC,GANF,KAY3B,OAAOD,GAGFO,EAAc,WACnB,IAAIC,EAAS,YAAOjB,GACpBiB,EAAYT,EAAQS,GACpBhB,EAAYgB,IAGPC,EAAc,SAACC,IACF,IAAdA,EACHhB,EAAgBD,EAAe,GAE/BK,GAAY,IAqBd,OAjBArB,qBAAU,WACTiB,EAAgB,GAChBI,GAAY,KACV,CAACD,IAEJpB,qBAAU,WACLgB,EAAeE,GAClBC,EAAaH,KAEZ,CAACA,EAAcE,IAElBlB,qBAAU,WACT,IAAI+B,EAAS,YAAOjB,GACpBiB,EAAYT,EAAQS,GACpBhB,EAAYgB,KACV,IAGF,gCACC,sBAAK7B,UAAU,SAAf,UACC,cAAC,EAAD,IACA,8CAAiBgB,KACjB,yCAAYF,KACZ,kEAED,qBAAKd,UAAU,YAAf,SACEY,EAASoB,KAAI,SAACC,GAAD,OACb,cAAC,EAAD,CAEC1B,IAAK0B,EAAS1B,IACdE,YAAawB,EAASxB,YACtBP,UAAW0B,EACXvB,eAAgByB,EAChB/B,WAAYmB,GALPe,EAASxB,sBCxFpByB,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,U","file":"static/js/main.ced0ff51.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"/home/saurav/Documents/the_odin_project/memory-card/src/App.css\";\n\nfunction Card(props) {\n\tconst [isClicked, setIsClicked] = useState(false);\n\n\tconst handleClick = () => {\n\t\tprops.randomize();\n\t\tconsole.log(isClicked);\n\t\tprops.parentCallback(isClicked);\n\t\tsetIsClicked(true);\n\t};\n\n\tuseEffect(() => {\n\t\tif (props.isGameOver === true) {\n\t\t\tsetIsClicked(false);\n\t\t}\n\t}, [props.isGameOver]);\n\n\treturn (\n\t\t<div className=\"card-container\" onClick={handleClick}>\n\t\t\t<img src={props.img} alt={props.description} />\n\t\t\t<p className=\"description\">{props.description}</p>\n\t\t</div>\n\t);\n}\n\nexport default Card;\n","import React from \"react\";\n\nfunction Header() {\n\treturn <h1>Minecraft Memory Game</h1>;\n}\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"./components/Card\";\nimport Header from \"./components/Header\";\nimport \"./App.css\";\n\nfunction App() {\n\tconst [imgArray, setImgArray] = useState([\n\t\t{ img: \"minecraft/Grass_Block.webp\", description: \"Grass\" },\n\t\t{ img: \"minecraft/Carved_Pumpkin.webp\", description: \"Pumpkin\" },\n\t\t{ img: \"minecraft/Furnace.webp\", description: \"Furnace\" },\n\t\t{ img: \"minecraft/Oak_Planks.webp\", description: \"Oak Planks\" },\n\t\t{ img: \"minecraft/Bookshelf.webp\", description: \"Bookshelf\" },\n\t\t{ img: \"minecraft/Dispenser.webp\", description: \"Dispenser\" },\n\t\t{ img: \"minecraft/Hay_Bale.webp\", description: \"Hay Bale\" },\n\t\t{ img: \"minecraft/Ladder.webp\", description: \"Ladder\" },\n\t\t{ img: \"minecraft/Melon.webp\", description: \"Melon\" },\n\t\t{ img: \"minecraft/Oak_Log.webp\", description: \"Oak Log\" },\n\t\t{ img: \"minecraft/Stone_Bricks.webp\", description: \"Stone Bricks\" },\n\t\t{ img: \"minecraft/Chest.webp\", description: \"Chest\" },\n\t\t{ img: \"minecraft/Birch_Log.webp\", description: \"Birch Log\" },\n\t\t{ img: \"minecraft/Diamond_Ore.webp\", description: \"Diamond Ore\" },\n\t\t{ img: \"minecraft/Cobblestone.webp\", description: \"Cobblestone\" },\n\t]);\n\n\tconst [currentScore, setCurrentScore] = useState(0);\n\n\tconst [highScore, setHighScore] = useState(0);\n\n\tconst [gameOver, setGameOver] = useState(false);\n\n\tconst shuffle = (array) => {\n\t\tlet currentIndex = array.length,\n\t\t\trandomIndex;\n\n\t\t// While there remain elements to shuffle...\n\t\twhile (currentIndex !== 0) {\n\t\t\t// Pick a remaining element...\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\tcurrentIndex--;\n\n\t\t\t// And swap it with the current element.\n\t\t\t[array[currentIndex], array[randomIndex]] = [\n\t\t\t\tarray[randomIndex],\n\t\t\t\tarray[currentIndex],\n\t\t\t];\n\t\t}\n\n\t\treturn array;\n\t};\n\n\tconst handleClick = () => {\n\t\tlet arrayCopy = [...imgArray];\n\t\tarrayCopy = shuffle(arrayCopy);\n\t\tsetImgArray(arrayCopy);\n\t};\n\n\tconst updateScore = (childData) => {\n\t\tif (childData === false) {\n\t\t\tsetCurrentScore(currentScore + 1);\n\t\t} else {\n\t\t\tsetGameOver(true);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tsetCurrentScore(0);\n\t\tsetGameOver(false);\n\t}, [gameOver]);\n\n\tuseEffect(() => {\n\t\tif (currentScore > highScore) {\n\t\t\tsetHighScore(currentScore);\n\t\t}\n\t}, [currentScore, highScore]);\n\n\tuseEffect(() => {\n\t\tlet arrayCopy = [...imgArray];\n\t\tarrayCopy = shuffle(arrayCopy);\n\t\tsetImgArray(arrayCopy);\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"header\">\n\t\t\t\t<Header />\n\t\t\t\t<h3>High Score: {highScore}</h3>\n\t\t\t\t<h3>Score: {currentScore}</h3>\n\t\t\t\t<p>Only click on each image once!</p>\n\t\t\t</div>\n\t\t\t<div className=\"all-cards\">\n\t\t\t\t{imgArray.map((resource) => (\n\t\t\t\t\t<Card\n\t\t\t\t\t\tkey={resource.description}\n\t\t\t\t\t\timg={resource.img}\n\t\t\t\t\t\tdescription={resource.description}\n\t\t\t\t\t\trandomize={handleClick}\n\t\t\t\t\t\tparentCallback={updateScore}\n\t\t\t\t\t\tisGameOver={gameOver}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}